version: '3.5'

services:
  postgres:
    container_name: postgresql
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  mysql:
    container_name: mysql
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USERNAME: mysql
      MYSQL_PASSWORD: mysql
      MYSQL_DATABASE: mysql

  mongo:
    container_name: mongo
    image: mongo
    ports:
      - 27017:27017
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: 123456

  redis:
    container_name: redis
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'
    networks:
      - app-tier

  redis-sentinel:
    container_name: redis-sentinel
    image: 'bitnami/redis-sentinel:latest'
    environment:
      - REDIS_MASTER_HOST=localhost
      - REDIS_SENTINEL_RESOLVE_HOSTNAMES=yes
    ports:
      - '26379:26379'
    networks:
      - app-tier

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 9090:8080

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog
    ports:
      - 1025:1025
      - 8025:8025
  
  sftp:
    container_name: sftp
    image: atmoz/sftp
    volumes:
        - sftp-data:/home/user/job_reports
    ports:
        - "2222:22"
    command: report:123456:1001
  
  rabbitmq:
    hostname: rabbitmq
    container_name: "rabbitmq"
    image: rabbitmq:3.8.34-management
    ports:
      - "5673:5672"
      - "15673:15672"
   
volumes:
  sftp-data:
  postgres-data:

networks:
  app-tier:
    driver: bridge
  postgres-network:
    driver: bridge
